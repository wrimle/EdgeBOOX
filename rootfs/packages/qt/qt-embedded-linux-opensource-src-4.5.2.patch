diff -ruN qt-embedded-linux-opensource-src-4.5.2.org/src/gui/painting/qdrawhelper_p.h qt-embedded-linux-opensource-src-4.5.2/src/gui/painting/qdrawhelper_p.h
--- qt-embedded-linux-opensource-src-4.5.2.org/src/gui/painting/qdrawhelper_p.h	2009-06-20 07:02:18.000000000 +0200
+++ qt-embedded-linux-opensource-src-4.5.2/src/gui/painting/qdrawhelper_p.h	2009-12-07 11:05:56.000000000 +0100
@@ -1159,16 +1159,13 @@
 }
 
 #ifdef QT_QWS_DEPTH_8
+// Onyx patch for grayscale.
 template <>
 inline quint8 qt_colorConvert(quint32 color, quint8 dummy)
 {
     Q_UNUSED(dummy);
 
-    uchar r = ((qRed(color) & 0xf8) + 0x19) / 0x33;
-    uchar g = ((qGreen(color) &0xf8) + 0x19) / 0x33;
-    uchar b = ((qBlue(color) &0xf8) + 0x19) / 0x33;
-
-    return r*6*6 + g*6 + b;
+    return qGray(qRed(color), qGreen(color), qBlue(color));
 }
 
 template <>
@@ -1176,15 +1173,16 @@
 {
     Q_UNUSED(dummy);
 
-    uchar r = (color & 0xf800) >> (11-3);
-    uchar g = (color & 0x07c0) >> (6-3);
-    uchar b = (color & 0x001f) << 3;
-
-    uchar tr = (r + 0x19) / 0x33;
-    uchar tg = (g + 0x19) / 0x33;
-    uchar tb = (b + 0x19) / 0x33;
+    // The color is rgb 444
+    uchar r = ((color >> 8 )& 0x0f);
+    uchar g = (color & 0x00f0);
+    uchar b = (color & 0x000f);
+
+    uchar tr = (r << 4) | r;
+    uchar tg = g | (g >> 4);
+    uchar tb = (b << 4) | b;
 
-    return tr*6*6 + tg*6 + tb;
+    return qGray(tr, tg, tb);
 }
 
 #endif // QT_QWS_DEPTH_8
